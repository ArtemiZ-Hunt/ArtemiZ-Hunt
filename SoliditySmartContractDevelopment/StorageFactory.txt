// SPDX-License-Identifier: MIT
pragma solidity ^0.8.19;

import {SimpleStorage, SimpleStorage5} from "./SimpleStorage.sol";

contract StorageFactory{

    //type visibility name

    SimpleStorage[] public simpleStorageContracts;

    //address[] public simpleStorageAddresses;

    function createSimpleStorageContract() public{
        simpleStorageContracts.push(new SimpleStorage());
    }

    function sfStore(uint256 _simpleStorageIndex, uint256 _newSimpleStorageNumber) public{
        //Address
        //ABI - Application Binary Interface

        SimpleStorage mySimpleStorage = simpleStorageContracts[_simpleStorageIndex];

        mySimpleStorage.store(_newSimpleStorageNumber);
    }

    function sfGet(uint256 _simpleStprageIndex) public view returns(uint256){
        SimpleStorage mySimpleStorage = simpleStorageContracts[_simpleStprageIndex];
        return mySimpleStorage.retrive();
    }
}